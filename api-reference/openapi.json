{
  "openapi": "3.0.1",
  "info": {
    "title": "PromptLab API",
    "description": "LLM Proxy and Management API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.promptlab.ai"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1/smart/chat/completions": {
      "post": {
        "summary": "Smart Routing",
        "description": "Smart routing between different LLM providers",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatCompletionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatCompletionRequest": {
        "type": "object",
        "required": ["model", "messages"],
        "properties": {
          "model": {
            "type": "string",
            "description": "ID of the model to use (e.g. gpt-4, claude-3)"
          },
          "messages": {
            "type": "array",
            "description": "The messages to generate chat completions for",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "client": {
            "type": "object",
            "properties": {
              "user": {
                "type": "string",
                "description": "Optional end user identifier for tracking"
              }
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "required": ["role", "content"],
        "properties": {
          "role": {
            "type": "string",
            "description": "The role of the message author",
            "enum": ["system", "user", "assistant"]
          },
          "content": {
            "type": "string",
            "description": "The content of the message"
          }
        }
      },
      "ChatCompletionResponse": {
        "type": "object",
        "required": ["choices"],
        "properties": {
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["message"],
              "properties": {
                "message": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}